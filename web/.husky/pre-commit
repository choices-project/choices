#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Enhanced pre-commit validation
echo "üîç Running comprehensive pre-commit checks..."
echo "=============================================="

# 1. Security checks
echo ""
echo "[INFO] üîí SECURITY CHECKS"
echo "-------------------"
npm run security-check || {
  echo "::error::Security check failed"
  exit 1
}
echo "[SUCCESS] Security checks passed! ‚úÖ"

# 2. Code quality checks
echo ""
echo "[INFO] üìù CODE QUALITY CHECKS"
echo "------------------------"

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$' || true)

if [ -n "$STAGED_FILES" ]; then
  echo "Linting staged files..."
  echo "$STAGED_FILES" | xargs npx eslint --cache --max-warnings=0 || {
    echo "::error::Linting failed on staged files"
    exit 1
  }
  echo "[SUCCESS] Linting passed! ‚úÖ"
else
  echo "No staged TypeScript/JavaScript files to lint"
fi

# 3. Warn about underscore declarations in non-test files
echo ""
echo "[INFO] ‚ö†Ô∏è  WARNINGS & SUGGESTIONS"
echo "----------------------------"

OFFENDERS=$(git diff --cached --name-only --diff-filter=ACM \
  | grep -Ev '(\.test\.|/__tests__/)' \
  | xargs -I{} git diff --cached --unified=0 -- {} \
  | grep -En "^\+[^+].*\b(const|let|var)\s+_[a-zA-Z0-9_]+" || true)

if [ -n "$OFFENDERS" ]; then
  echo "‚ö†Ô∏è  Leading-underscore variable declarations detected outside tests:"
  echo "$OFFENDERS" | head -20
  echo "   (CI will still fail if these are unused.)"
  echo ""
fi

echo "[SUCCESS] üéâ All pre-commit checks passed! Commit proceeding..."
