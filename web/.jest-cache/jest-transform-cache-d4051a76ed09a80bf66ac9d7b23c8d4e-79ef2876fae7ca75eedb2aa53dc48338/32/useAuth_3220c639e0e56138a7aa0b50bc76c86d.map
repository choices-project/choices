{"version":3,"sources":["/Users/alaughingkitsune/src/Choices/web/hooks/useAuth.ts"],"sourcesContent":["'use client'\n\nimport { useEffect, useCallback, useState, createContext, useContext } from 'react'\nimport { LoginCredentials, RegisterData } from '@/types';\nimport { devLog } from '@/lib/logger';\nimport { getAuthService, User, AuthError } from '../lib/auth'\n\nexport interface AuthState {\n  user: User | null\n  isAuthenticated: boolean\n  isLoading: boolean\n  error: AuthError | null\n}\n\nexport interface AuthActions {\n  login: (credentials: LoginCredentials) => Promise<void>\n  register: (data: RegisterData) => Promise<void>\n  logout: () => Promise<void>\n  refreshUser: () => Promise<void>\n  clearError: () => void\n}\n\nexport function useAuth(): AuthState & AuthActions {\n  const [state, setState] = useState<AuthState>({\n    user: null,\n    isAuthenticated: false,\n    isLoading: true,\n    error: null,\n  })\n\n  const authService = getAuthService()\n\n  // Initialize authentication state\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        setState(prev => ({ ...prev, isLoading: true, error: null }))\n\n        // Check if user is authenticated\n        if (authService.isAuthenticated()) {\n          // Get stored user first for immediate UI update\n          const storedUser = authService.getStoredUser()\n          if (storedUser) {\n            setState(prev => ({\n              ...prev,\n              user: storedUser,\n              isAuthenticated: true,\n              isLoading: false,\n            }))\n          }\n\n          // Fetch fresh user data from server\n          const user = await authService.getCurrentUser()\n          setState(prev => ({\n            ...prev,\n            user,\n            isAuthenticated: !!user,\n            isLoading: false,\n          }))\n        } else {\n          setState(prev => ({\n            ...prev,\n            user: null,\n            isAuthenticated: false,\n            isLoading: false,\n          }))\n        }\n      } catch (error) {\n        devLog('Auth initialization error:', error)\n        setState(prev => ({\n          ...prev,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          error: error instanceof AuthError ? error : new AuthError('INIT_ERROR', 'Failed to initialize authentication'),\n        }))\n      }\n    }\n\n    initializeAuth()\n  }, [authService])\n\n  // Login function\n  const login = useCallback(async (credentials: LoginCredentials) => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }))\n\n      const session = await authService.login(credentials)\n      \n      setState(prev => ({\n        ...prev,\n        user: session.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      }))\n    } catch (error) {\n      devLog('Login error:', error)\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: error instanceof AuthError ? error : new AuthError('LOGIN_ERROR', 'Login failed'),\n      }))\n      throw error\n    }\n  }, [authService])\n\n  // Register function\n  const register = useCallback(async (data: RegisterData) => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }))\n\n      const session = await authService.register(data)\n      \n      setState(prev => ({\n        ...prev,\n        user: session.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      }))\n    } catch (error) {\n      devLog('Registration error:', error)\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        error: error instanceof AuthError ? error : new AuthError('REGISTER_ERROR', 'Registration failed'),\n      }))\n      throw error\n    }\n  }, [authService])\n\n  // Logout function\n  const logout = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }))\n\n      await authService.logout()\n      \n      setState(prev => ({\n        ...prev,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      }))\n    } catch (error) {\n      devLog('Logout error:', error)\n      // Even if logout fails, clear local state\n      setState(prev => ({\n        ...prev,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: error instanceof AuthError ? error : new AuthError('LOGOUT_ERROR', 'Logout failed'),\n      }))\n    }\n  }, [authService])\n\n  // Refresh user function\n  const refreshUser = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }))\n\n      const user = await authService.getCurrentUser()\n      \n      setState(prev => ({\n        ...prev,\n        user,\n        isAuthenticated: !!user,\n        isLoading: false,\n        error: null,\n      }))\n    } catch (error) {\n      devLog('Refresh user error:', error)\n      setState(prev => ({\n        ...prev,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: error instanceof AuthError ? error : new AuthError('REFRESH_ERROR', 'Failed to refresh user'),\n      }))\n    }\n  }, [authService])\n\n  // Clear error function\n  const clearError = useCallback(() => {\n    setState(prev => ({ ...prev, error: null }))\n  }, [])\n\n  return {\n    ...state,\n    login,\n    register,\n    logout,\n    refreshUser,\n    clearError,\n  }\n}\n\n// Hook for checking authentication status\nexport function useAuthStatus(): { isAuthenticated: boolean; isLoading: boolean } {\n  const { isAuthenticated, isLoading } = useAuth()\n  return { isAuthenticated, isLoading }\n}\n\n// Hook for getting current user\nexport function useUser(): User | null {\n  const { user } = useAuth()\n  return user\n}\n\n// Hook for authentication actions only\nexport function useAuthActions(): AuthActions {\n  const { login, register, logout, refreshUser, clearError } = useAuth()\n  return { login, register, logout, refreshUser, clearError }\n}\n"],"names":["useAuth","useAuthActions","useAuthStatus","useUser","state","setState","useState","user","isAuthenticated","isLoading","error","authService","getAuthService","useEffect","initializeAuth","prev","storedUser","getStoredUser","getCurrentUser","devLog","AuthError","login","useCallback","credentials","session","register","data","logout","refreshUser","clearError"],"mappings":"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"}